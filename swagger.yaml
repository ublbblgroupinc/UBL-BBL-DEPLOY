openapi: 3.0.0
info:
  title: Invoice Api
  description: API for system that users can create and validate invoices
  version: 1.0.0

components:
  schemas:
    Business:
      type: object
      properties:
        busBsb:
          type: string
          nullable: true
          description: "bsb number"
        busAccNo:
          type: string
          nullable: true
          description: "Bank account number"
        busAccName:
          type: string
          nullable: true
          description: "Account name"
        busReference:
          type: string
          nullable: true
          description: "Payment reference"
        busBpay:
          type: string
          nullable: true
          description: "BPAY"
        busName:
          type: string
          description: "Business name"
        busAbn:
          type: string
          nullable: true
          description: "Australian Business Number (ABN)"
      required:
        - busName

paths:
  /users/signup:
    post:
      summary: Registers a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: 'Signup successful'
        '400':
          description: |
            Invalid email
            Invalid password 
              - Minimum length of 8 characters, at least one uppercase, one number, and one special character
            username/email unavailable
            Missing fields


  /users/login:
    post:
      summary: Logs a user in
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: |
            Incorrect password 
            Missing fields
        '404':
          description: User doesn't exist


  /users/signout:
    post:
      summary: Logs a user out
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logged out
        '401':
          description: Unauthorised

  /users/info:
    get:
      summary: Gets user info 
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User info retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  businesses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Business"
        '401':
          description: Unauthorised
    put:
      summary: Updates user info
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              anyOf:
                - required: [username]
                - required: [email]
                - required: [password]
      responses:
        '200':
          description: Successfully updated user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: |
            - No user info changed
            - Username already exists
            - Email is already being used
            - New username/email/password should not be current username/email/password
            - Invalid email/password
        '401':
          description: Unauthorised
        '404':
          description: User doesn't exist

  /invoices:
    post:
      summary: Creates an invoice 
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceNumber:
                  type: string
                date:
                  type: string
                buyerDetails:
                  type: object
                productDetails:
                  type: object
                totalCost:
                  type: number
      responses:
        '200':
          description: Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
        '401':
          description: Invalid token
    get:
      summary: Gets a list of all userâ€™s invoice details
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    invoiceNumber:
                      type: string
                    date:
                      type: string
                    buyerDetails:
                      type: object
                    productDetails:
                      type: object
                    totalCost:
                      type: number
        '401':
          description: Invalid token

  /invoices/{invoiceId}:
    post:
      summary: Sends an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                email:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Invoice sent
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId
          
    get:
      summary: Retrieves an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceNumber:
                    type: string
                  date:
                    type: string
                  buyerDetails:
                    type: object
                  productDetails:
                    type: object
                  totalCost:
                    type: number
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

    put:
      summary: Edits an invoice !!MAYBE REMOVE INVOICE NUMBER AND DATE!!
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceNumber:
                  type: string
                date:
                  type: string
                buyerDetails:
                  type: object
                productDetails:
                  type: object
                totalCost:
                  type: number
      responses:
        '200':
          description: Invoice updated
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

    delete:
      summary: Deletes an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice deleted
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /invoices/{invoiceId}/validate:
    get:
      summary: Validates an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  validationResults:
                    type: boolean
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /invoices/{invoiceId}/download:
    post:
      summary: Downloads an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice downloaded
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /contacts:
    post:
      summary: Creates a new contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                businessAddress:
                  type: string
                businessEmail:
                  type: string
                phoneNumber:
                  type: string
                abn:
                  type: string
      responses:
        '200':
          description: Contact created
          content:
            application/json:
              schema:
                type: object
                properties:
                  contactId:
                    type: string
        '401':
          description: Invalid token

  /contacts/{contactId}:
    put:
      summary: Edits a contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                businessAddress:
                  type: string
                businessEmail:
                  type: string
                phoneNumber:
                  type: string
                abn:
                  type: string
      responses:
        '200':
          description: Contact updated
        '401':
          description: Invalid token
        '400':
          description: Invalid contact details

    delete:
      summary: Deletes a contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact deleted
        '401':
          description: Invalid token
        '400':
          description: Invalid contactId